name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4.1.3
        id: release
        with:
          token: ${{ secrets.PAT_TOKEN }}

  # The following jobs are executed only if a release is created
  build-firebase:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    env:
      ARTIFACT_NAME: jacem-chaieb-me-${{ needs.release-please.outputs.tag_name }}-firebase
    outputs:
      artifact-name: ${{ env.ARTIFACT_NAME }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: yarn
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            .output
            .nuxt
          key: ${{ runner.os }}-firebase-nuxt-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-firebase-nuxt-build-
      - run: yarn install
      - run: yarn run generate
      - uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        id: upload-artifact
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ./.output/public/
            firebase.json
            .firebaserc
          if-no-files-found: error
      - run: |
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -o "${{ env.ARTIFACT_NAME }}.zip" \
            "${{ github.api_url }}/repos/${{ github.repository }}/actions/artifacts/${{ steps.upload-artifact.outputs.artifact-id }}/zip"
      - run: gh release upload ${{ needs.release-please.outputs.tag_name }} ${{ env.ARTIFACT_NAME }}.zip
        env:
          GH_TOKEN: ${{ github.TOKEN }}

  deploy-firebase:
    runs-on: ubuntu-latest
    needs: build-firebase
    environment:
      name: production
      url: https://jacem.chaieb.me
    steps:
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.build-firebase.outputs.artifact-name }}
          path: ./artifacts/firebase
      - uses: FirebaseExtended/action-hosting-deploy@0cbcac4740c2bfb00d632f0b863b57713124eb5a #v0.9.0
        id: deployment-firebase
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JACEM_CHAIEB }}
          projectId: jacem-chaieb
          channelId: live
          entryPoint: ./artifacts/firebase

  build-github-pages:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    env:
      ARTIFACT_NAME: jacem-chaieb-me-${{ needs.release-please.outputs.tag_name }}-github-pages
    outputs:
      artifact-name: ${{ env.ARTIFACT_NAME }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20
          cache: yarn
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            .output
            .nuxt
          key: ${{ runner.os }}-github-pages-nuxt-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-github-pages-nuxt-build-
      - uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0
      - run: |
          GITHUB_REPO_NAME="$(echo "${GITHUB_REPOSITORY}" | awk -F'/' '{print $2}')"
          echo "NUXT_APP_BASE_URL=/${GITHUB_REPO_NAME}/" >> "$GITHUB_ENV"
      - run: yarn install
      - run: yarn run generate --preset github_pages
      - uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        id: upload-artifact
        with:
          path: ./.output/public/
      - run: |
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -o "${{ env.ARTIFACT_NAME }}.zip" \
            "${{ github.api_url }}/repos/${{ github.repository }}/actions/artifacts/${{ steps.upload-artifact.outputs.artifact_id }}/zip"
      - run: gh release upload ${{ needs.release-please.outputs.tag_name }} ${{ env.ARTIFACT_NAME }}.zip
        env:
          GH_TOKEN: ${{ github.TOKEN }}

  deploy-github-pages:
    runs-on: ubuntu-latest
    needs: build-github-pages
    environment:
      name: github-pages
      url: ${{ steps.deployment-github-pages.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment-github-pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
